version: '3'
services:
  prometheus:
    image: prom/prometheus:v2.30.3
    user: root
    container_name: prometheus
    ports:
      - 9090:9090
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
       - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
      - ./loki:/data/loki

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail:/etc/promtail-config/
    command: -config.file=/etc/promtail-config/promtail.yml      
  grafana:
    image: grafana/grafana:8.2.2 
    user: 1000:1000
    container_name: grafana
    ports:
      - 9091:3000
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false

  cadvisor:
    image: 'google/cadvisor:latest'
    container_name: cadvisor
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk/:ro    
    ports:
      - 9092:8080 
    restart: always        

  alertmanager:
    image: prom/alertmanager:v0.23.0
    container_name: alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - "./alertmanager:/config"
      - ./alertmanager-data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    healthcheck:
      test: "curl -f http://localhost:9200 || exit 1"

  logstash:
    image: docker.elastic.co/logstash/logstash:7.15.2
    container_name: logstash
    restart: unless-stopped
    ports:
      - "5044:5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline/
    healthcheck:
      test: "curl -f http://localhost:9600 || exit 1"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.2
    container_name: kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    healthcheck:
      test: "curl -f http://localhost:5601 || exit 1"

  filebeat:
    build: filebeat
    container_name: filebeat
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
  node-exporter:
    image: "prom/node-exporter"
    container_name: node-exporter
    ports:
      - 9100:9100
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
 
  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    restart: unless-stopped
networks:
  default:
      name: devops